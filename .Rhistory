)
t.test(extra~I(releval(group,2)),paired=TRUE,data=sleep)
t.test(extra~I(relevel(group,2)),paired=TRUE,data=sleep)
t.test(extra~I(),paired=TRUE,data=sleep)
t.test(extra~I(group),paired=TRUE,data=sleep)
?z.test
?norm.test
t16
a<-c(1,4,6,5,6,2,5,7,8,11,33,42,64,8,4,21,4,74,53,25,34,75,3)
t.test(a)
plot(a)
log10(a)
a<-log10(a+1)
t.test(a)
10^1.103564
10^1.103564-1
10^0.8949553-1
10^1.3121725-1
plot(a+1)
hist(a+1)
hist(a)
hist(log10(a+1))
hist(a)
hist(log10(a+1))
dnorm(log10(a+1))
b<-dnorm(log10(a+1))
plot(b,style="b")
plot(b,type="b")
library(datasets)
data("ChickWeight")
library(reshape2)
head(ChickWeight)
wideCW<-dcast(Chickweight,Diet+Chick~time,value.var="weight")
wideCW<-dcast(ChickWeight,Diet+Chick~time,value.var="weight")
wideCW<-dcast(ChickWeight,Diet+Chick~Time,value.var="weight")
head(wideCW)
?melt
data<-melt(wideCW,ID=c("Diet","Chick",value.var=c("weight","Time")
)
)
head(data)
data<-melt(wideCW,ID=c("Diet","Chick",value.var=c("Time","weight")
)
)
head(data)
data<-melt(wideCW,ID=c("Diet","Chick"),value.var=c("Time","weight"))
head(data)
data<-melt(wideCW,ID=c("Diet","Chick","Time"),value.var=c("Time","weight"))
head(data)
head(wideCW)
dim(data)
dim(wideCW)
data<-melt(wideCW,ID=c("Diet","Chick","Time"),variable="Time", value.var=c("Time","weight"))
head(data)
data
names(wideCW)
names(wideCW)[-(1:2)]<-paste("time",names(wideCW)[-(1:2)],sep="")
head(wideCW)
wideCW14<-subset(wideCW,Diet%in%c(1,4))
t.test(gain~relevel(Diet(4)),paired=FALSE,var.equal=FALSE,data=wideCW14)
wideCW14<-subset(wideCW,Diet%in%c(1,4))
wideCW14<-mutate(wideCW14,gain=time21-time0)
wideCW14$gain<-with(wideCW14,time21-time0)
t.test(gain~relevel(Diet(4)),paired=FALSE,var.equal=FALSE,data=wideCW14)
t.test(gain~relevel(Diet,4),paired=FALSE,var.equal=FALSE,data=wideCW14)
t.test(gain~relevel(Diet,4),paired=TRUE,var.equal=FALSE,data=wideCW14)
t.test(gain~relevel(Diet,4),paired=FALSE,var.equal=TRUE,data=wideCW14)
t.test(gain~I(relevel(Diet,4)),paired=FALSE,var.equal=TRUE,data=wideCW14)
swirl()
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot(2)
myplot2(2)
qt(0.975,2)
6.4/16.4
myplot2(20)
myplot2(30)
myplot2(20)
sleep
range(g1)
range(g2)
difference<-g1-g2
difference<-g2-g1
mean(difference)
s<-sd(difference)
mean(difference)+c(-1,1)*qt(0.975,10)*s*sqrt(10)
mn+c(-1,1)*qt(0.975,10)*s*sqrt(10)
mn+c(-1,1)*qt(0.975,9)*s*sqrt(10)
mn+c(-1,1)*qt(0.975,9)*s/sqrt(10)
?t.test
t.test(g2-g1)
t.test(difference)$conf.int
sp<-7*15.34^2+20*18.23^2
ns<-27
sp<-sqrt(sp/ns)
(132.86-127.44)+c(-1,1)*qt(0.95,27)*sp
(132.86-127.44)+c(-1,1)*qt(0.95,ns)*sp*sqrt(1/8+1/21)
(132.86-127.44)+c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8+1/21)
132.86-127.44+c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8+1/21)
sp<-sqrt((9*sd(g1)^2+9*sd(g2)^2)/18)
sp<-sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*qt(0.975,18)*sp*sqrt(1/10+1/10)
t.test(g2,g1)$conf.int
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf.int
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num<-15.34^2/8+18.23^2/21
num<-(15.34^2/8+18.23^2/21)^2
den<-15.34^4/8^2/7+18.23^4/21^2/20
mydf<-num/den
132.86-127.44+c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
?dcast
library(reshape2)
?dcast
head(airquality)
melt(airquality,id=c("month","day"),na.rm=TRUE)
melt(airquality,id=c("Month","Day"),na.rm=TRUE)
aqm<-melt(airquality,id=c("Month","Day"),na.rm=TRUE)
head(aqm)
head(airquality)
aqm<-melt(airquality,id=c("Month","Day"),value.var="Ozone",na.rm=TRUE)
head(aqm)
aqm<-melt(airquality,id=c("Month","Day"),variable="Solar.R",value.var="Ozone",na.rm=TRUE)
head(aqm)
aqm<-melt(airquality,id=c("Month","Day"),value.var=c("type","Ozone",na.rm=TRUE)
aqm<-melt(airquality,id=c("Month","Day"),value.var=c("type","Ozone"),na.rm=TRUE)
head(aqm)
aqm<-melt(airquality,id=c("Month","Day"),na.rm=TRUE)
dcast(aqm,variable~month,mean)
dcast(aqm,variable~Month,mean)
aqm<-melt(airquality,id=c("Month","Day"),value.var="Ozone",na.rm=TRUE)
dcast(aqm,variable~Month,mean)
aqm<-melt(airquality,id=c("Month","Day"),value.var="Ozone",na.rm=TRUE)
dim(aqm)
aqm<-melt(airquality,id=c("Month","Day"),na.rm=TRUE)
dim(aqm)
aqm<-melt(airquality,id=c("Month","Day"),value.var=c("Ozone","Solar.R"),na.rm=TRUE)
dcast(aqm,variable~Month,mean)
aqm<-melt(airquality,id=c("Month","Day"),variable=c("Ozone","Solar.R"),na.rm=TRUE)
aqm<-melt(airquality,id=c("Month","Day"),variable.names=c("Ozone","Solar.R"),na.rm=TRUE)
dim(aqm)
head9aqm
dim(aqm)
head(aqm)
aqm<-melt(airquality,id=c("Month","Day"),na.rm=TRUE,margins=c("month","variable"))
head(aqm)
library(swirl)
swirl()
10/10
library(ggplot2)
swirl()
install_from_swirl("Statistical Inference")
swirl()
(32-30)/1
2/10*4
15
qt(0.95,15)
dim(fs)
t.test(fs$fheight,fs$sheight,paired=TRUE)
11.7885*sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
pt(2.5,15,lower.tail=FALSE)
qnorm(0.95)
qnorm(0.99)
pt(2)
pt(2,df=15)
pnorm(2)
pnorm(2,lower.tail=FALSE)
mybin
pbinom(6,8,prob=.5,lower.tail=FALSE)
pbinom(7,8,prob=.5,lower.tail=FALSE)
pbinom(7,8,prob=.5,lower.tail=TRUE)
ppois(9,5,lower.tail=FALSE)
?t.test()
qt(0.975,8)
1100+c(-1,1)*qt(0.975,8)*30/sqrt(9)
x=6/qt(0.975,8)
x
2+c(-1,1)*qt(0.975,18)*sqrt((9*0.6+9*0.68)/19)/sqrt(20)
2+c(-1,1)*qt(0.975,18)*sqrt((9*0.6+9*0.68)/18)/sqrt(20)
-2+c(-1,1)*qt(0.975,18)*sqrt((9*0.6+9*0.68)/18)/sqrt(20)
-2+c(-1,1)*qt(0.975,18)*sqrt((9*0.6+9*0.68)/18)*sqrt(1/10+1/10)
?tf
?df
(4-6)+c(-1,1)*qnorm(0.975)*((0.5*100+2*100)/200)/sqrt(200)
(4-6)+c(-1,1)*qnorm(0.975)*((0.5*100+2*100)/200)*sqrt(1/100+1/100)
2-c(-1,1)*qnorm(0.975)*((0.5*100+2*100)/200)*sqrt(1/100+1/100)
(-3-1)+c(1,-1)*qt(0.95,16)*((1.5*8+1.8*8)/16)*sqrt(1/9+1/9)
(-3-1)+c(1,-1)*qt(0.95,16)*((1.5*8+1.8*8)/16)*sqrt(1/8+1/8)
(-3-1)+c(1,-1)*qt(0.95,16)*((1.5*8+1.8*8)/16)*sqrt(1/9+1/9)
(-3-1)+c(1,-1)*pnorm(.95)*((1.5*8+1.8*8)/16)*sqrt(1/9+1/9)
(-3-1)+c(1,-1)*qnorm(.95)*((1.5*8+1.8*8)/16)*sqrt(1/9+1/9)
(-3-1)+c(1,-1)*qt(0.95,16)*sqrt((1.5^2*8+1.8^2*8)/16)*sqrt(1/9+1/9)
?power.t.test()
?t.test
t.test
install.packages(bootstrap)
install.packages("bootstrap")
library(bootstrap)
?bias
?bcanon
library(Using R)
library(UsingR)
install.packages("UsingR")
library(UsingR)
data(galton)
library(reshape)
library(reshapes)
library(reshape2)
head(galton)
melt(galton)
long<-melt(galton)
data(galton)
long<-melt(galton)
melt(galton)
long<-melt(galton)
long<-melt(galton,all)
?melt
long<-melt(galton,value.name="height")
long<-melt(galton,variables=all,value.name="height")
long<-melt(galton,measure variables=all,value.name="height")
head(galton)
long<-melt(galton,id='',value.name='height',)
long<-melt(galton,id=NA,value.name='height',)
long<-melt(galton,variable=all,value.name='height',)
long<-melt(galton,variable=all,value.name="height",)
long<-melt(galton,variable=all,value.name="height")
long<-melt(galton,variable=all,value.name="value")
?arg(melt)
?arg(melt()
)
?args(melt)
?args(melt())
?melt
melt(galton,varible=c("child","father"))
long<-melt(galton,varible=c("child","father"))
long<-melt(galton,varible="all")
long<-melt(galton,var.value=all)
long<-melt(galton,value=all)
long<-melt(galton,var.value=c("child","father"))
long<-melt(galton,measure.vars=all)
long<-melt(galton,measure.vars=c("child","father"))
long<-melt(galton,measure.vars=c("child","parents"))
long<-melt(galton,measure.vars=c("child","parent"))
head(long)
?lm
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child~parent,galton)
?jitter
?runif
?jitter
child
galton$child
head(galton$child)
head(jitter(galton$child,4))
jitter(rep(10000, 5))
head(jitter(galton$child,4))
a<-jitter(galton$child,4)-galton$child
range(a)
z<-max(galton$child)-min(galton$child)
4*z/50
plot(jitter(child,4)~parent,galton)
regrline<-lm(child~parent,galton)
?abline
ablind(regrline,lwd=3,col='red')
abline(regrline,lwd=3,col='red')
summary(regrline)
fit<-lm(child~parent,galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals,galton$parent)
?cov
cov
swirl()
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
rhs[n]-lhs[n]
rhs-lsh
rhs-lhs
lhs-rhs
all.equal(lhs,rhs)
varChild<-var(galton$child)
varRes<-var(fit$residuals)
varEst<-est(ols.slope,ols.ic)
varEst<-var(est(ols.slope,ols.ic))
all.equal(varChild,sum(varRes,varEst))
all.equal(varChild,varRes+varEst)
efit<-lm(accel~mag+dist,attenu)
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
cor(gpa_nor,gch_nor)
l_nor<-lm(child~parent,galton)
l_nor<-lm(gch_nor~gpa_nor)
x<-c(0.18.-1.54,0.42,0.95)
x<-c(0.18,-1.54,0.42,0.95)
y<-c(2,1,3,1)
mean(x)
x<-c(0.8,0.47,0.51,0.73,0.36,0.58,0.57,0.85,0.44,0.42)
y<-c(1.39,0.72,1.55,0.48,1.19,-1.59,1.23,-0.65,1.49,0.05)
fit<-lm(y~x,-1)
summary(fit)
fit<-lm(y~x-1)
summary(fit)
library(datasets)
head(mtcars)
fit<-lm(mpg~wt,mtcars)
fit$coefficients
x<-c(8.58,10.46,9.01,9.64,8.86)
mean(x)
sd(x)
(8.58-9.31)/0.7511325
x<-c(0.8,0.47,0.51,0.73,0.36,0.58,0.57,0.85,0.44,0.42) y<-c(1.39,0.72,1.55,0.48,1.19,-1.59,1.23,-0.65,1.49,0.05)
x<-c(0.8,0.47,0.51,0.73,0.36,0.58,0.57,0.85,0.44,0.42) y<-c(1.39,0.72,1.55,0.48,1.19,-1.59,1.23,-0.65,1.49,0.05)
x<-c(0.8,0.47,0.51,0.73,0.36,0.58,0.57,0.85,0.44,0.42)
y<-c(1.39,0.72,1.55,0.48,1.19,-1.59,1.23,-0.65,1.49,0.05)
fit<-lm(y~x)
fit$coefficients[1]
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x<-c(0.18,-1.54,0.42,0.95)
w<-c(2,1,3,1)
z<-x*w
mean(z)
z<-x*sqrt(w)
mean(Z)
mean(z)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
z<-x*sqrt(w)
sum(z)/sqrt(w)
sum(z)/sum(sqrt(w))
library(swirl)
swirl()
myplot(34)
myplot(333.3)
myplot(33.3)
plot(30)
myplot(30)
myplot(28)
z<-qnorm(0.95)
pnorm(30+z,mean=30,lower.tail=FALSE)
pnorm(30+z,mean=32,lower.tail=FALSE)
pnorm(30+z,mean=32,sd=1,lower.tail=FALSE)
pnorm(30+z,mean=32,sd=2,lower.tail=FALSE)
pnorm(30+z*2,mean=32,sd=2,lower.tail=FALSE)
power.t.test(n=16,delta=2/4.sd=1.type="one.sample",alt="one.sided")$power
power.t.test(n=16,delta=2/4,sd=1,type="one.sample",alt="one.sided")$power
power.t.test(n=16,delta=2,sd=4,type="one.sample",alt="one.sided")$power
power.t.test(n=16,delta=100,sd=200,type="one.sample",alt="one.sided")$power
power.t.test(power=.8,delta=2/4,sd=1,type="one.sample",alt="one.sided")$n
power.t.test(power=.8,delta=2,sd=4,type="one.sample",alt="one.sided")$n
power.t.test(power=.8,delta=100,sd=200,type="one.sample",alt="one.sided")$n
power.t.test(power=.8,n=26,sd=1,type="one.sample",alt="one.sided")$delta
power.t.test(power=.8,n=27,sd=1,type="one.sample",alt="one.sided")$delta
head(pValues)
sum(pValues>0.05)
sum(pValues<0.05)
sum(p.adjust(pValues,methond="bonferroni")<0.05)
sum(p.adjust(pValues,method="bonferroni")<0.05)
sum(p.adjust(pValues,method="BH")<0.05)
tail(trueStatus)
table(pValues2<.05,trueStatus)
2.4%
0.024
24/500
table(p.adjust(pValues2,method="bonferroni")<0.05,trueStatus)
table(p.adjust(pValues2,method="BH")<0.05,trueStatus)
1*1/6+2*1/6+3*1/6+4*1/6+5*1/6+6*16
1*1/6+2*1/6+3*1/6+4*1/6+5*1/6+6*1/6
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam<-sample(fh,size=nf*B,replace=TRUE)
sam<-sample(fh,size=nh*B,replace=TRUE)
resam<-matrix(sam,nrow=B,ncol=nh)
meds<-apply(resam,1,median)
median(fh)-median(meds)
sd(meds)/sqrt(1000)
sd(meds)
sd(resampleMedians)
sd(resampledMedians)
quantile(resampledMedians,c(.025,.975))
quantile(meds,c(.025,.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs<-testStat(BCcounts,group)
obs
mean(Bdata$count-Cdata$count)
sample(group)
perms<-sapply(1:10000,function(i) testStat(BCcounts,sampe(group)))
perms<-sapply(1:10000,function(i) testStat(BCcounts,sample(group)))
perms>obs
mean(perms>obs)
testStat(DEcounts,grouop)
testStat(DEcounts,group)
perms<-sapply(1:10000,function(i) testStat(DEcounts,sample(group)))
Baseline<-c(140,138,150,148,135)
Week2<-c(132,135,151,146,130)
difference<-Baseline-Week2
mean(difference)
t.test(Baseline,Week2,alpha=0.05,paired=TRUE,var.equal = False)
t.test(Baseline,Week2,alpha=0.1,paired=TRUE,var.equal = False)
t.test(Baseline,Week2,alpha=0.01,paired=TRUE,var.equal = False)
?t.test
t.test(Baseline,Week2,conf.level=0.9,paired=TRUE,var.equal = False)
t.test(Baseline,Week2,conf.level=0.95,paired=TRUE,var.equal = False)
t.test(Baseline,Week2,conf.level=0.957,paired=TRUE,var.equal = False)
t.test(Baseline,Week2,conf.level=0.913,paired=TRUE,var.equal = False)
qt(0.025)
?qt
qt(0.025,df=8,lower.tail=TRUE)
qt(0.975,df=8,lower.tail=TRUE)
qt(0.025,df=8,lower.tail=FALSE)
1100+c(-1,1)*qt(0.975,df=8,lower.tail=TRUE)*30/3
c<-c(1,1,1,-1)
sample(c,1000*4,replace=TRUE)
data<-sample(c,1000*4,replace=TRUE)
data<-matrox(data,nrow=1000,ncol=4)
data<-matrix(data,nrow=1000,ncol=4)
meandata<-sapply(data,1,mean)
meandata<-sapply(data,1,mean)
meandata<-apply(data,1,mean)
?t.test
t.test(meandata,alternative="greater",mu=0,conf.level=0.69)
t.test(meandata,alternative="greater",mu=0,conf.level=0.9)
t.test(meandata,alternative="greater",mu=0,conf.level=0.995)
meandata
hist(meandata)
sum(meandata>0)
mean(meandata)
t.test(meandata,conf.level=0.995)
sum(data=1)
sum(data==1)
dim(data)
3026/4000
sum(meandata>0)
range(meandata)
?t.test
t.test(meandata,alternative="greater",mu=0,conf.level=0.95)
t.test(meandata,alternative="greater",mu=0,conf.level=0.99995)
sd(meandata)
0.513+c(-1,1)*qt(0.95,df=999)*sd(meandata)/sqrt(1000)
0.513+c(-1,1)*qt(0.995,df=999)*sd(meandata)/sqrt(1000)
0.513+c(-1,1)*qt(0.9999999995,df=999)*sd(meandata)/sqrt(1000)
0.513+c(-1,1)*qt(0.9999999999,df=999)*sd(meandata)/sqrt(1000)
0.513+c(-1,1)*qt(0.99999999999999999,df=999)*sd(meandata)/sqrt(1000)
0.513+c(-1,1)*qt(0.9999999999999,df=999)*sd(meandata)/sqrt(1000)
0.513+c(-1,1)*qt(0.99999999999999,df=999)*sd(meandata)/sqrt(1000)
0.513+c(-1,1)*qt(0.99999999999999999,df=999)*sd(meandata)/sqrt(1000)
0.513+c(-1,1)*qt(0.9999999999999999,df=999)*sd(meandata)/sqrt(1000)
0.513+c(-1,1)*qt(0.99999999999999999,df=999)*sd(meandata)/sqrt(1000)
?binom.test
binom.test(3026,4000,p=0.5,alternative="greater",conf.level=0.95)
binom.test(3026,4000,p=0.5,alternative="greater",conf.level=1)
binom.test(3026,4000,p=0.5,alternative="greater",conf.level=0.995)
binom.test(3026,4000,p=0.5,alternative="greater",conf.level=0.95)
?pnorm
?pbinom
pbinom(0.75,size=4,prob=0.5,lower.tail=FALSE)
pbinom(0.75,size=4000,prob=0.5,lower.tail=FALSE)
c<-c(1,1,1,0)
data<-sample(c,1000*4)
data<-sample(c,1000*4,replace=TRUE)
data<-matrix(data,nrow=1000,ncol=4)
meandata<-apply(data,1,mean)
?binom.test()
?t.test
t.test(meandata,alternative="greater",mu=0.5,conf.level=0.95)
sum(data==10
sum(data==1)
tasting<-matrix(c(2,2,3,1),nrow=2,dimnames=list(Guess=c("Coca","Pepsi"),Truth=c("Coca","Pepsi")))
fisher.test(tasting,alternative="greater")
tasting<-matrix(c(3,1,2,2),nrow=2,dimnames=list(Guess=c("Coca","Pepsi"),Truth=c("Coca","Pepsi")))
fisher.test(tasting,alternative="greater")
?t.poisson
?poisson.test()
poisson.test(10,1787,0.01,"greater",conf.level=0.89)
poisson.test(10,1787,0.01,"greater",conf.level=0.97)
poisson.test(3,4,0.5,"greater",0.95)
(-3-1)+c(-1,1)*qt(0.975,16)*(8*1.5+8*1.8)*sqrt(1/9+1/9)
(-3-1)+c(-1,1)*qt(0.975,16)*(8*1.5+8*1.8)/16*sqrt(1/9+1/9)
(-3-1)+c(-1,1)*qt(0.995,16)*(8*1.5+8*1.8)/16*sqrt(1/9+1/9)
?t.test
(1077+1123)/2
?power.t.test
power.t.test(100,delta=0.01,sd=0.04,alternative="one.sided",sig.level=0.05)$power
power.t.test(power=0.9,delta=0.01,sd=0.04,alternative="one.sided",sig.level=0.05)$n
power.t.test(power=0.9,delta=0.01,sd=0.04,sig.level=0.05)$n
power.t.test(power=0.9,delta=0.01,sd=0.04,alternative="one.sided",sig.level=0.05,type="paired")$n
power.t.test(100,delta=0.01,sd=0.04,alternative="one.sided",sig.level=0.05,type="paired")$power
?pbinom
pbinom(2,4,0.5,lower.tail=FALSE)
?poisson.test()
poisson.test(10,1787,0.01,alternative="greater",conf.level=0.95)
poisson.test(10,1787,0.01,alternative="less",conf.level=0.95)
setwd()
setwd("./coursera/Data Science specialization/Reproducible reserach/Week 1/Assignment/")
